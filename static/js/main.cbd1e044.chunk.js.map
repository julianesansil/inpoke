{"version":3,"sources":["assets/images/pokebola.svg","assets/fonts/Montserrat-Regular.ttf","assets/fonts/Montserrat-Bold.ttf","assets/fonts/Pokemon-Solid.ttf","models/entity.enum.ts","services/api/base.api.ts","services/helpers/url.helper.ts","models/paginated-response.entity.ts","models/pokemon.entity.ts","services/api/pokemon.api.ts","components/grid.comp.tsx","components/flip-card.comp.tsx","components/loader.comp.tsx","components/button.style.tsx","components/input.style.tsx","pages/home/components/home.style.tsx","pages/home/components/header.comp.tsx","components/tag.style.tsx","config/tag-colors.ts","pages/home/components/card-face.comp.tsx","pages/home/components/card-backface.comp.tsx","pages/home/index.tsx","global-styles.ts","App.tsx","index.tsx"],"names":["module","exports","ENTITY","api","axios","create","baseURL","baseAPI","get","url","config","a","response","data","urlHelper","entity","idString","split","replace","parseInt","PaginatedResponseEntity","next","results","this","map","resultResponse","id","name","PokemonEntity","imageURL","hp","abilities","forms","stats","types","getImageURL","imageName","String","padStart","abilityResponse","ability","isHidden","is_hidden","formResponse","statResponse","stat","base_stat","value","typeResponse","type","offset","pokemonAPI","listPokemon","params","limit","POKEMON","getPokemon","pokemonKey","toLowerCase","SCContainer","styled","div","Grid","props","children","SCInner","height","width","SCCardBody","SCFace","SCBackface","FlipCard","cardFaceComponent","cardBackfaceComponent","rotate","keyframes","SCImage","img","Loader","src","pokebola","alt","SCButton","button","SCInput","input","SCMain","main","SCForm","form","SharedSCButton","SharedSCInput","hasError","SCError","p","SCFinalSentence","header","SCTitle","h1","SCSubtitle","h2","SCChildren","HeaderTitle","SCTag","backgroundColor","TAG_COLORS","normal","fighting","flying","poison","ground","bug","rock","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","shadow","unknown","reset","SCTags","CardFace","pokemon","key","SCDetailsTable","table","SCDetailItem","td","SCStatsTable","SCStatItem","SCProgress","progress","CardBackface","index","length","max","loadedPokemons","Home","useState","pokemons","setPokemons","hasMore","setHasMore","hasListError","setHasListError","isFilterOn","setIsFilterOn","searchText","setSearchText","hasSearchError","setHasSearchError","pokemonPromises","pokemonList","forEach","result","push","Promise","all","pokemonData","searchPokemon","e","preventDefault","useEffect","trim","onSubmit","placeholder","onChange","target","pageStart","loadMore","loader","createGlobalStyle","PokemonSolid","MontserratRegular","MontserratBold","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbd1e044.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokebola.6b4ffa55.svg\";","module.exports = __webpack_public_path__ + \"static/media/Montserrat-Regular.ee653992.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Montserrat-Bold.ade91f47.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Pokemon-Solid.36d26dbc.ttf\";","enum ENTITY {\n  POKEMON = 'pokemon',\n  TYPE = 'type',\n}\n\nexport default ENTITY;\n","import axios, { AxiosRequestConfig } from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://pokeapi.co/api/v2',\n});\n\nconst get = async <T>(\n  url: string,\n  config?: AxiosRequestConfig | undefined,\n): Promise<T> => {\n  const response = await api.get<T>(url, config);\n  return response.data;\n};\n\nexport const baseAPI = {\n  get,\n};\n","import ENTITY from '../../models/entity.enum';\n\nconst getId = (url: string, entity: ENTITY): number | null => {\n  const idString: string = url.split(`/${entity}/`)[1]?.replace('/', '');\n  const id: number = parseInt(idString, 10);\n\n  return id || null;\n};\n\nexport const urlHelper = {\n  getId,\n};\n","import ENTITY from './entity.enum';\nimport { urlHelper } from '../services/helpers/url.helper';\n\nexport interface PaginatedResponse {\n  next: string;\n  results: {\n    name: string;\n    url: string;\n  }[];\n}\n\nclass PaginatedResponseEntity {\n  next: string;\n\n  results: {\n    id: number | null;\n    name: string;\n  }[];\n\n  constructor(response: PaginatedResponse, entity: ENTITY) {\n    this.next = response.next;\n\n    this.results = response.results.map(resultResponse => {\n      return {\n        id: urlHelper.getId(resultResponse.url, entity),\n        name: resultResponse.name,\n      };\n    });\n  }\n}\n\nexport default PaginatedResponseEntity;\n","/* eslint-disable camelcase */\n\nexport interface PokemonResponse {\n  id: number;\n  name: string;\n  base_experience: number;\n\n  abilities: {\n    ability: {\n      name: string;\n    };\n    is_hidden: boolean;\n  }[];\n  forms: {\n    name: string;\n  }[];\n  stats: {\n    base_stat: number;\n    stat: {\n      name: string;\n    };\n  }[];\n  types: {\n    type: {\n      name: string;\n    };\n  }[];\n}\n\nclass PokemonEntity {\n  id: number;\n\n  name: string;\n\n  imageURL: string;\n\n  hp = 0;\n\n  abilities: {\n    name: string;\n    isHidden: boolean;\n  }[];\n\n  forms: string[];\n\n  stats: {\n    name: string;\n    value: number;\n  }[];\n\n  types: string[];\n\n  constructor(response: PokemonResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.imageURL = this.getImageURL(response.id);\n\n    this.abilities = response.abilities.map(abilityResponse => {\n      return {\n        name: abilityResponse?.ability?.name,\n        isHidden: abilityResponse?.is_hidden,\n      };\n    });\n\n    this.forms = response.forms.map(formResponse => formResponse?.name);\n\n    this.stats = response.stats.map(statResponse => {\n      if (statResponse.stat.name === 'hp') {\n        this.hp = statResponse.base_stat;\n      }\n\n      return {\n        name: statResponse?.stat?.name,\n        value: statResponse?.base_stat,\n      };\n    });\n\n    this.types = response.types.map(typeResponse => typeResponse?.type?.name);\n  }\n\n  getImageURL = (id: number): string => {\n    const imageName = `${String(id).padStart(3, '0')}.png`;\n    return `https://assets.pokemon.com/assets/cms2/img/pokedex/full/${imageName}`;\n  };\n}\n\nexport default PokemonEntity;\n","import { baseAPI } from './base.api';\nimport PaginatedResponseEntity, {\n  PaginatedResponse,\n} from '../../models/paginated-response.entity';\nimport PokemonEntity, { PokemonResponse } from '../../models/pokemon.entity';\nimport ENTITY from '../../models/entity.enum';\n\nconst BASE_URL = 'pokemon';\nconst LIMIT = 24;\nlet offset = 0;\n\nconst listPokemon = async (): Promise<PaginatedResponseEntity> => {\n  const response = await baseAPI.get<PaginatedResponse>(BASE_URL, {\n    params: {\n      limit: LIMIT,\n      offset,\n    },\n  });\n  offset += LIMIT;\n\n  return new PaginatedResponseEntity(response, ENTITY.POKEMON);\n};\n\nconst getPokemon = async (\n  pokemonKey: number | string,\n): Promise<PokemonEntity> => {\n  const url = `${BASE_URL}/${String(pokemonKey).toLowerCase()}`;\n  const response = await baseAPI.get<PokemonResponse>(url);\n  return new PokemonEntity(response);\n};\n\nexport const pokemonAPI = {\n  listPokemon,\n  getPokemon,\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface GridProps {\n  children: JSX.Element | JSX.Element[];\n}\n\nconst SCContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, auto));\n  gap: 20px;\n\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Grid: React.FC<GridProps> = (props: GridProps) => {\n  const { children } = props;\n\n  return <SCContainer>{children}</SCContainer>;\n};\n\nexport default Grid;\n","import React from 'react';\nimport styled from 'styled-components';\n\ntype FlipCardProps = {\n  cardFaceComponent: JSX.Element;\n  cardBackfaceComponent: JSX.Element;\n} & FlipCardStyles;\n\ninterface FlipCardStyles {\n  height?: number;\n  width?: number;\n}\n\nconst SCInner = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n\n  border: #000 solid 1px;\n  border-radius: 10px;\n\n  transition: transform 0.6s;\n  transform-style: preserve-3d;\n`;\n\nconst SCContainer = styled.div<FlipCardStyles>`\n  ${(props: FlipCardStyles) => `\n    height: ${props.height}px;\n    width: ${props.width}px;\n  `}\n\n  &:hover ${SCInner} {\n    transform: rotateY(180deg);\n  }\n`;\n\nconst SCCardBody = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n\n  overflow: scroll;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n`;\n\nconst SCFace = styled(SCCardBody)`\n  padding: 30px;\n`;\n\nconst SCBackface = styled(SCCardBody)`\n  padding: 20px 14px;\n  background-color: #fff;\n  border-radius: 10px;\n\n  transform: rotateY(180deg);\n`;\n\nconst FlipCard: React.FC<FlipCardProps> = (props: FlipCardProps) => {\n  const {\n    cardFaceComponent,\n    cardBackfaceComponent,\n    height = 250,\n    width = 250,\n  } = props;\n\n  return (\n    <SCContainer height={height} width={width}>\n      <SCInner>\n        <SCFace>{cardFaceComponent}</SCFace>\n        <SCBackface>{cardBackfaceComponent}</SCBackface>\n      </SCInner>\n    </SCContainer>\n  );\n};\n\nexport default FlipCard;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport pokebola from '../assets/images/pokebola.svg';\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst SCContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding-top: 50px;\n`;\n\nconst SCImage = styled.img`\n  width: 30px;\n  animation: ${rotate} 1s linear infinite;\n`;\n\nconst Loader: React.FC = () => {\n  return (\n    <SCContainer>\n      <SCImage src={pokebola} alt=\"Loading...\" />\n    </SCContainer>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const SCButton = styled.button`\n  padding: 10px 20px;\n\n  background-color: #4f6cf6;\n  border: none;\n  border-radius: 4px;\n  color: white;\n  font-size: 1.1em;\n`;\n\nexport default SCButton;\n","import styled from 'styled-components';\n\nconst SCInput = styled.input`\n  width: 500px;\n  padding: 8px 20px;\n\n  border: #4f6cf6 solid 2px;\n  border-radius: 4px;\n  font-size: 1.1em;\n\n  @media (min-width: 726px) {\n    width: 70%;\n  }\n`;\n\nexport default SCInput;\n","import styled from 'styled-components';\nimport SharedSCButton from '../../../components/button.style';\nimport SharedSCInput from '../../../components/input.style';\n\nexport const SCMain = styled.main`\n  margin-bottom: 70px;\n`;\n\nexport const SCForm = styled.form`\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (min-width: 726px) {\n    width: 660px;\n  }\n`;\n\nexport const SCButton = styled(SharedSCButton)`\n  width: 100%;\n  margin-top: 10px;\n\n  @media (min-width: 726px) {\n    width: 20%;\n    margin-top: 0;\n    margin-left: 10px;\n  }\n`;\n\nexport const SCInput = styled(SharedSCInput)<{ hasError: boolean }>`\n  width: 100%;\n  border-color: ${(props: { hasError: boolean }) =>\n    props.hasError ? '#c91c23' : '#4f6cf6'};\n\n  @media (min-width: 726px) {\n    width: 70%;\n  }\n`;\n\nexport const SCError = styled.p`\n  margin-top: 10px;\n  color: #c91c23;\n  text-align: center;\n`;\n\nexport const SCFinalSentence = styled.p`\n  margin-top: 30px;\n  font-style: italic;\n  font-size: 1.1em;\n  text-align: center;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface HeaderProps {\n  children: JSX.Element;\n}\n\nconst SCContainer = styled.header`\n  padding: 50px 0 70px;\n  text-align: center;\n`;\n\nconst SCTitle = styled.h1`\n  color: #c91c23;\n  font-family: 'Pokemon';\n  font-size: 4em;\n`;\n\nconst SCSubtitle = styled.h2`\n  margin-top: -14px;\n  font-size: 1.5em;\n  font-weight: bold;\n`;\n\nconst SCChildren = styled.div`\n  margin-top: 36px;\n`;\n\nconst HeaderTitle: React.FC<HeaderProps> = (props: HeaderProps) => {\n  const { children } = props;\n\n  return (\n    <SCContainer>\n      <SCTitle>InPoke_</SCTitle>\n      <SCSubtitle>Gotta catch &apos;em all!</SCSubtitle>\n\n      <SCChildren>{children}</SCChildren>\n    </SCContainer>\n  );\n};\n\nexport default HeaderTitle;\n","import styled from 'styled-components';\n\ninterface SCTagProps {\n  backgroundColor: string;\n}\n\nconst SCTag = styled.p<SCTagProps>`\n  display: inline;\n  margin-right: 5px;\n  padding: 5px 15px;\n\n  border: none;\n  border-radius: 4px;\n  color: white;\n  font-size: 0.9em;\n\n  background-color: ${(props: SCTagProps) => props.backgroundColor};\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport default SCTag;\n","const TAG_COLORS: { [key: string]: string } = {\n  normal: '#9A9DA1',\n  fighting: '#D84255',\n  flying: '#9BB4E8',\n  poison: '#B563CE',\n  ground: '#D78555',\n  bug: '#9DC12F',\n  rock: '#CFC18C',\n  ghost: '#6971C4',\n  steel: '#5596A4',\n  fire: '#F8A64E',\n  water: '#569EDF',\n  grass: '#5CBF61',\n  electric: '#EDD53E',\n  psychic: '#F87C7A',\n  ice: '#7DD4C9',\n  dragon: '#0773C7',\n  dark: '#5F616D',\n  fairy: '#EF97E6',\n  shadow: '#FFFFFF',\n  unknown: '#FFFFFF',\n  reset: '#FFFFFF',\n};\n\nexport default TAG_COLORS;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport PokemonEntity from '../../../models/pokemon.entity';\nimport SCTag from '../../../components/tag.style';\nimport TAG_COLORS from '../../../config/tag-colors';\n\ninterface CardFaceProps {\n  pokemon: PokemonEntity;\n}\n\nconst SCContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  height: 100%;\n  width: 100%;\n`;\n\nconst SCImage = styled.img`\n  height: 100px;\n`;\n\nconst SCTitle = styled.p`\n  margin-top: 12px;\n  font-size: 1.1em;\n  text-transform: capitalize;\n`;\n\nconst SCTags = styled.div`\n  margin-top: 10px;\n`;\n\nconst CardFace: React.FC<CardFaceProps> = (props: CardFaceProps) => {\n  const { pokemon } = props;\n\n  return (\n    <SCContainer>\n      <SCImage src={pokemon.imageURL} alt={pokemon.name} />\n\n      <SCTitle>{`${pokemon.name} | ${pokemon.hp} HP`}</SCTitle>\n\n      <SCTags>\n        {pokemon.types.map(type => (\n          <SCTag key={type} backgroundColor={TAG_COLORS[type]}>\n            {type}\n          </SCTag>\n        ))}\n      </SCTags>\n    </SCContainer>\n  );\n};\n\nexport default CardFace;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport PokemonEntity from '../../../models/pokemon.entity';\n\ninterface CardBackfaceProps {\n  pokemon: PokemonEntity;\n}\n\nconst SCContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SCTitle = styled.p`\n  font-size: 1.1em;\n  text-transform: capitalize;\n`;\n\nconst SCDetailsTable = styled.table`\n  width: 100%;\n  margin-top: 8px;\n`;\n\nconst SCDetailItem = styled.td`\n  font-size: 0.85em;\n  text-transform: capitalize;\n`;\n\nconst SCStatsTable = styled.table`\n  width: 100%;\n  margin-top: 10px;\n`;\n\nconst SCStatItem = styled.td`\n  font-size: 0.7em;\n  text-transform: capitalize;\n`;\n\nconst SCProgress = styled.progress`\n  background-color: #e6e6e6;\n  border-radius: 6px;\n\n  &::-webkit-progress-bar {\n    background-color: #e6e6e6;\n    border-radius: 6px;\n  }\n  &::-webkit-progress-value {\n    background-color: #4f6cf6;\n    border-radius: 6px;\n  }\n  &::-moz-progress-bar {\n    background-color: #4f6cf6;\n    border-radius: 6px;\n  }\n`;\n\nconst CardBackface: React.FC<CardBackfaceProps> = (\n  props: CardBackfaceProps,\n) => {\n  const { pokemon } = props;\n\n  return (\n    <SCContainer>\n      <SCTitle>{pokemon.name}</SCTitle>\n\n      <SCDetailsTable>\n        <tbody>\n          <tr>\n            <SCDetailItem>Forms:</SCDetailItem>\n            <SCDetailItem>{pokemon.forms}</SCDetailItem>\n          </tr>\n\n          <tr>\n            <SCDetailItem>Abilities:</SCDetailItem>\n\n            <SCDetailItem>\n              {pokemon.abilities.map((ability, index) => {\n                return (\n                  <p key={ability.name}>\n                    {`${ability.name} ${\n                      index < pokemon.abilities.length - 1 ? ' / ' : ''\n                    }`}\n                  </p>\n                );\n              })}\n            </SCDetailItem>\n          </tr>\n        </tbody>\n      </SCDetailsTable>\n\n      <SCStatsTable>\n        <tbody>\n          {pokemon.stats.map(stat => (\n            <tr key={stat.name}>\n              <SCStatItem>{stat.name}</SCStatItem>\n\n              <SCStatItem>\n                <SCProgress value={stat.value} max=\"100\" />\n              </SCStatItem>\n            </tr>\n          ))}\n        </tbody>\n      </SCStatsTable>\n    </SCContainer>\n  );\n};\n\nexport default CardBackface;\n","import React, { useEffect, useState, FormEvent } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nimport PokemonEntity from '../../models/pokemon.entity';\nimport { pokemonAPI } from '../../services/api/pokemon.api';\n\nimport Grid from '../../components/grid.comp';\nimport FlipCard from '../../components/flip-card.comp';\nimport Loader from '../../components/loader.comp';\n\nimport {\n  SCMain,\n  SCForm,\n  SCButton,\n  SCInput,\n  SCError,\n  SCFinalSentence,\n} from './components/home.style';\nimport Header from './components/header.comp';\nimport CardFace from './components/card-face.comp';\nimport CardBackface from './components/card-backface.comp';\n\nlet loadedPokemons: PokemonEntity[] = [];\n\nconst Home: React.FC = () => {\n  const [pokemons, setPokemons] = useState<PokemonEntity[]>([]);\n  const [hasMore, setHasMore] = useState<boolean>(true);\n  const [hasListError, setHasListError] = useState<boolean>(false);\n\n  const [isFilterOn, setIsFilterOn] = useState<boolean>(false);\n  const [searchText, setSearchText] = useState<string>();\n  const [hasSearchError, setHasSearchError] = useState<boolean>(false);\n\n  const listPokemon = async () => {\n    setHasListError(false);\n    const pokemonPromises: Promise<PokemonEntity>[] = [];\n\n    try {\n      const pokemonList = await pokemonAPI.listPokemon();\n      pokemonList.results.forEach(\n        result =>\n          result.id && pokemonPromises.push(pokemonAPI.getPokemon(result.id)),\n      );\n      setHasMore(!!pokemonList.next);\n\n      const pokemonData = await Promise.all(pokemonPromises);\n      loadedPokemons = [...pokemons, ...pokemonData];\n      setPokemons(loadedPokemons);\n    } catch (error) {\n      setHasListError(true);\n    }\n  };\n\n  const searchPokemon = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    setIsFilterOn(true);\n    setHasSearchError(false);\n\n    if (searchText) {\n      try {\n        const pokemonData = await pokemonAPI.getPokemon(searchText);\n        setPokemons([pokemonData]);\n      } catch (error) {\n        setHasSearchError(true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    listPokemon();\n  }, []);\n\n  useEffect(() => {\n    if (!searchText?.trim()) {\n      setIsFilterOn(false);\n      setHasSearchError(false);\n      setPokemons(loadedPokemons);\n    }\n  }, [searchText]);\n\n  return (\n    <div>\n      <Header>\n        <SCForm onSubmit={searchPokemon}>\n          <SCInput\n            type=\"text\"\n            hasError={hasSearchError}\n            placeholder=\"pókemon name or id\"\n            onChange={e => setSearchText(e.target.value)}\n          />\n          <SCButton type=\"submit\">Catch</SCButton>\n\n          {hasSearchError && (\n            <SCError>Who is that pokémon? (search error)</SCError>\n          )}\n        </SCForm>\n      </Header>\n\n      <SCMain>\n        <InfiniteScroll\n          pageStart={0}\n          loadMore={listPokemon}\n          hasMore={isFilterOn ? false : hasMore}\n          loader={<Loader key={0} />}\n        >\n          <Grid>\n            {pokemons.map(pokemon => (\n              <FlipCard\n                key={pokemon.id}\n                cardFaceComponent={<CardFace pokemon={pokemon} />}\n                cardBackfaceComponent={<CardBackface pokemon={pokemon} />}\n              />\n            ))}\n          </Grid>\n        </InfiniteScroll>\n        {hasListError && <SCError>Error loading pokémons :(</SCError>}\n\n        {!hasMore && (\n          <SCFinalSentence>\n            ... Surrender now, or prepare to fight!\n          </SCFinalSentence>\n        )}\n      </SCMain>\n    </div>\n  );\n};\n\nexport default Home;\n","import { createGlobalStyle } from 'styled-components';\nimport MontserratRegular from './assets/fonts/Montserrat-Regular.ttf';\nimport MontserratBold from './assets/fonts/Montserrat-Bold.ttf';\nimport PokemonSolid from './assets/fonts/Pokemon-Solid.ttf';\n\nexport default createGlobalStyle`\n  @font-face {\n    font-family: 'Pokemon';\n    src: url(${PokemonSolid}) format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Montserrat';\n    src: url(${MontserratRegular}) format('truetype');\n    font-weight: normal;\n    font-style: normal;\n  }\n\n  @font-face {\n    font-family: 'Montserrat';\n    src: url(${MontserratBold}) format('truetype');\n    font-weight: bold;\n    font-style: normal;\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    \n    box-sizing: border-box;\n    font: inherit;\n    font-size: 100%;\n    vertical-align: baseline;\n  }\n\n  body {\n    font-family: 'Montserrat', sans-serif;\n    font-size: 16px;\n    line-height: 1.5;\n  }\n\n  #root {\n    padding-left: 5%;\n    padding-right: 5%;\n\n    @media (min-width: 1066px) {\n      padding-left: calc((100% - 960px) / 2);\n      padding-right: calc((100% - 960px) / 2);\n    }\n\n    @media (min-width: 1440px) {\n      padding-left: calc((100% - 1200px) / 2);\n      padding-right: calc((100% - 1200px) / 2);\n    }\n  }\n`;\n","import React from 'react';\nimport Home from './pages/home';\nimport GlobalStyle from './global-styles';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Home />\n      <GlobalStyle />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}